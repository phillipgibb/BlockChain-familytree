//var solc = require('solc');
var fs = require('fs');
var contract = require("truffle-contract");

//import { default as Web3} from 'web3';
import { default as CryptoJS } from 'crypto-js';
export default class  FamilyTreeWrapper {

  constructor(web3){
  this.web3 = web3
  this.familyTreeABI = '[{"constant":false,"inputs":[{"name":"childId","type":"int128"},{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"dateOfBirth","type":"string"},{"name":"dateOfDeath","type":"string"}],"name":"addMother","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"parentId","type":"int128"},{"name":"childId","type":"int128"}],"name":"hasThisChild","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"childId","type":"int128"},{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"dateOfBirth","type":"string"},{"name":"dateOfDeath","type":"string"}],"name":"addFather","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"fatherId","type":"int128"},{"name":"motherId","type":"int128"},{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"dateOfBirth","type":"string"},{"name":"dateOfDeath","type":"string"}],"name":"addChild","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getNumberOfFamilyMembers","outputs":[{"name":"","type":"int128"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"id","type":"int128"}],"name":"getNode","outputs":[{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"spouseId","type":"int128"},{"name":"dateOfBirth","type":"string"},{"name":"dateOfDeath","type":"string"},{"name":"motherId","type":"int128"},{"name":"fatherId","type":"int128"},{"name":"childrenIds","type":"int128[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"id","type":"int128"},{"name":"dateOfDeath","type":"string"}],"name":"funeral","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"dateOfBirth","type":"string"},{"name":"dateOfDeath","type":"string"}],"name":"addFamilyMember","outputs":[{"name":"newId","type":"int128"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"otherSpouseId","type":"int128"},{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"dateOfBirth","type":"string"},{"name":"dateOfDeath","type":"string"}],"name":"addSpouse","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"spouseId","type":"int128"},{"name":"otherSpouseId","type":"int128"}],"name":"divorse","outputs":[],"payable":false,"type":"function"},{"inputs":[{"name":"name","type":"string"},{"name":"gender","type":"string"},{"name":"dateOfBirth","type":"string"}],"payable":false,"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"fromAddress","type":"address"},{"indexed":false,"name":"toAddress","type":"address"},{"indexed":false,"name":"linkId","type":"uint256"}],"name":"FamilyCreated","type":"event"}]';
  this.familyTreeByteCode = "";
  
} 

initialize(){
  // this.familyTreeContract = contract({
  //   abi: this.familyTreeABI,
  //   unlinked_binary: this.familyTreeByteCode
  // })
  // this.familyTreeContract.setProvider(this.web3);
  this.familyTreeContract = this.web3.eth.contract(JSON.parse(this.familyTreeABI));
}
    
estimateGas (params) {
  const estimateGasAsync = (resolve, reject) => {
    this.web3.eth.estimateGas(
      params,
      (error, estimatedGas) => {
        if (error) {
          reject(error)
        } else {
          resolve(estimatedGas)
        }
      }
    )
  }
  return new Promise(estimateGasAsync)
}

findContract(contractAddress) {
  const findAsync = (resolve, reject) => {
    this.contract.at(contractAddress, (error, deployedContract) => {
      if (error)
        reject(error);
      else
        resolve(new FamilyTreeWrapper(deployedContract));
    });
  };
  return new Promise(findAsync);
}
newFamilyTree(name, gender, dob){
  console.log("contract; " + this.familyTreeContract)
  //this.familyTreeContract.new(name, gender, dob); 
  console.log("Deploying the contract");
  this.deployedContract = this.familyTreeContract.new(name, gender, dob, {from: web3.eth.coinbase, gas: 1000000, data: this.familyTreeByteCode}, (err, res) => {
    if (err) {
        console.log(err);
        return;
    }

    // Log the tx, you can explore status with eth.getTransaction()
    console.log(res.transactionHash);

    // If we have an address property, the contract was deployed
    if (res.address) {
        console.log('Contract address: ' + res.address);
        // Let's test the deployed contract
        testContract(res.address);
    }
});
 // console.log("Your contract is being deployed in transaction at " + this.deployedContract.transactionHash);
 // waitForContractToBeMined();
}
sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

// We need to wait until any miner has included the transaction
// in a block to get the address of the contract
async waitForContractToBeMined() {
  while (true) {
    let receipt = web3.eth.getTransactionReceipt(deployedContract.transactionHash);
    if (receipt && receipt.contractAddress) {
      console.log("Your contract has been deployed at" + receipt.contractAddress);
      console.log("Note that it might take 30 - 90 sceonds for the block to propagate befor it's visible in etherscan.io");
      break;
    }
    console.log("Waiting a mined block to include your contract... currently in block " + web3.eth.blockNumber);
    await sleep(4000);
  }
}
}
//module.exports = FamilyTreeWrapper;